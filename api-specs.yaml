openapi: 3.0.0
info:
  title: CrowdStrike Falcon
  description: CrowdStrike Falcon
  version: "1.0"
servers:
  - url: https://api.us-2.crowdstrike.com

paths:
  /alerts/queries/alerts/v2:
    get:
      operationId: GetQueriesAlertsV2
      description: "Query all alerts currently on CrowdStrike. This API will return a list of Alert IDs"
      parameters:
        - in: query
          name: include_hidden
          schema:
            default: true
            type: boolean
          description: "allows previously hidden alerts to be retrieved"
        - in: query
          name: offset
          schema:
            type: integer
          description: "The first detection to return, where 0 is the latest detection. Use with the offset parameter to manage pagination of results."
        - in: query
          name: limit
          schema:
            default: 10
            maximum: 10000
            minimum: 0
            type: integer
          required: true
          description: "The maximum number of detections to return in this response (default: 100; max: 10000). Use with the offset parameter to manage pagination of results."
        - in: query
          name: sort
          schema:
            type: string
          description: "Sort parameter takes the form <field|direction>. Direction can be either asc (ascending) or desc (descending) order. For example: status|asc or status|desc."
        - in: query
          name: filter
          schema:
            type: string
          description: "Filter Alerts using a query in Falcon Query Language (FQL).Filter fields can be any keyword field that is part of #domain.Alert"
        - in: query
          name: q
          schema:
            type: string
          description: "Search all detection metadata for the provided string"
      responses:
        "200":
          description: "OK"
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/AlertQueryResponse"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertQueryResponse"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMetaOnly"
        "429":
          description: "Too Many Requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMetaOnly"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMetaOnly"

components:
  schemas:
    ReplyMetaOnly:
      type: object
      required:
        - meta
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/APIError"
        meta:
            $ref: "#/components/schemas/MetaInfo"

    MetaInfo:
      type: object
      required:
        - query_time
        - trace_id
      properties:
        pagination:
          $ref: "#/components/schemas/Paging"
        powered_by:
          type: string
        query_time:
          type: number
          format: double
        trace_id:
          type: string
        writes:
          $ref: "#/components/schemas/Resources"

    APIError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        id:
          type: string
        message:
          type: string

    Paging:
      type: object
      required:
        - limit
        - offset
        - total
      properties:
        limit:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        total:
          type: integer
          format: int32

    Resources:
      type: object
      required:
        - resources_affected
      properties:
        resources_affected:
          type: integer
          format: int32

    AlertQueryResponse:
      type: object
      required:
        - meta
        - resources
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/APIError"
        meta:
          $ref: "#/components/schemas/MetaInfo"
        resources:
          description: "Array of the Alerts requested"
          type: array
          items:
            type: string
            description: "Alert ID"
            example: "ddae18657d0a426db6afacce64c540a6:ngsiem:ddae18657d0a426db6afacce64c540a6:dd40545edb0e427aa50887c34e4178a1"
