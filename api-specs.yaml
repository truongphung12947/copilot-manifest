openapi: 3.0.0
info:
  title: CrowdStrike Falcon
  description: CrowdStrike Falcon
  version: "1.0"
servers:
  - url: https://api.us-2.crowdstrike.com

paths:
  /alerts/queries/alerts/v2:
    get:
      operationId: GetQueriesAlertsV2
      description: "Query all alerts currently on CrowdStrike. This API will return a list of Alert IDs"
      parameters:
        - in: query
          name: include_hidden
          schema:
            default: true
            type: boolean
          description: "allows previously hidden alerts to be retrieved"
        - in: query
          name: offset
          schema:
            type: integer
          description: "The first detection to return, where 0 is the latest detection. Use with the offset parameter to manage pagination of results."
        - in: query
          name: limit
          schema:
            default: 10
            maximum: 10000
            minimum: 0
            type: integer
          required: true
          description: "The maximum number of detections to return in this response (default: 100; max: 10000). Use with the offset parameter to manage pagination of results."
        - in: query
          name: sort
          schema:
            type: string
          description: "Sort parameter takes the form <field|direction>. Direction can be either asc (ascending) or desc (descending) order. For example: status|asc or status|desc."
        - in: query
          name: filter
          schema:
            type: string
          description: "Filter Alerts using a query in Falcon Query Language (FQL).Filter fields can be any keyword field that is part of #domain.Alert"
        - in: query
          name: q
          schema:
            type: string
          description: "Search all detection metadata for the provided string"
      responses:
        "200":
          description: "OK"
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/AlertQueryResponse"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertQueryResponse"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMetaOnly"
        "429":
          description: "Too Many Requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMetaOnly"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMetaOnly"

  # /alerts/entities/alerts/v2:
  #   post:
  #     security:
  #       - OAuth2: [alerts:read]
  #     operationId: PostEntitiesAlertsV2
  #     summary: "Retrieves all Alerts detail information given their IDs"
  #     parameters:
  #       - in: query
  #         name: include_hidden
  #         schema:
  #           default: true
  #           type: boolean
  #         description: "allows previously hidden alerts to be retrieved"
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/PostEntitiesAlertsV2Request"
  #     responses:
  #       "200":
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/PostEntitiesAlertsV2Response"
  #       "400":
  #         description: "Bad Request"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/PostEntitiesAlertsV2Response"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "500":
  #         description: "Internal Server Error"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/PostEntitiesAlertsV2Response"
            
  # /devices/combined/devices/login-history/v2:
  #   post:
  #     security:
  #       - OAuth2: [devices:read]
  #     operationId: QueryDeviceLoginHistoryV2
  #     summary: "Retrieve details about recent interactive login sessions for a set of devices powered by the Host Timeline."
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/IdsRequest"
  #     responses:
  #       "200":
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/LoginHistoryResponseV1"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"

  # /devices/combined/devices/network-address-history/v1:
  #   post:
  #     security:
  #       - OAuth2: [devices:read]
  #     operationId: QueryGetNetworkAddressHistoryV1
  #     summary: "Retrieve history of IP and MAC addresses of devices."
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/IdsRequest"
  #     responses:
  #       "200": 
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/NetworkAddressHistoryResponseV1"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"

  # /devices/entities/devices/v2:
  #   post:
  #     security:
  #       - OAuth2: [devices:read]
  #     operationId: GetDeviceDetailsV2
  #     summary: "Get details on one or more hosts by providing agent IDs (AID)."
  #     parameters:
  #       - in: query
  #         name: ids
  #         required: true
  #         schema:
  #           maxItems: 100            
  #           type: array
  #           items:
  #             type: string
  #         description: "the host agentIDs used to get details on"
  #     responses:
  #       "200": 
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/DeviceDetailsResponse"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"

  # /devices/queries/devices/v1:
  #   get:
  #     security:
  #       - OAuth2: [devices:read]
  #     operationId: QueryDevicesByFilter
  #     summary: "Search for hosts in your environment by platform, hostname, IP, and other criteria."
  #     parameters:
  #       - in: query
  #         name: offset
  #         schema:
  #           type: integer
  #         description: "The offset to start retrieving records from"
  #       - in: query
  #         name: limit
  #         schema:
  #           maximum: 5000
  #           minimum: 1
  #           type: integer
  #         description: "The maximum records to return. [1-5000]"
  #       - in: query
  #         name: sort
  #         schema:
  #           type: string 
  #         description: "The property to sort by (e.g. status.desc or hostname.asc)"
  #       - in: query
  #         name: filter
  #         schema:
  #           type: string 
  #         description: "The filter expression that should be used to limit the results."
  #     responses:
  #       "200": 
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/QueryResponse"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"

  # /iocs/aggregates/indicators/device-count/v1:
  #   get:
  #     security:
  #       - OAuth2: [ioc:read] 
  #     operationId: IndicatorGetDeviceCountV1
  #     summary: "Number of hosts in your customer account that have observed a given custom IOC"
  #     parameters:
  #       - in: query
  #         name: type
  #         required: true
  #         schema:
  #           type: string 
  #         description: "The type of the indicator. Valid types include: sha256 (A hex-encoded sha256 hash string. Length - min: 64, max: 64.), md5 (A hex-encoded md5 hash string. Length - min 32, max: 32.), domain (A domain name. Length - min: 1, max: 200.), ipv4 (An IPv4 address. Must be a valid IP address.), ipv6 (An IPv6 address. Must be a valid IP address.)"
  #       - in: query
  #         name: value
  #         required: true
  #         schema:
  #           type: string 
  #         description: "The string representation of the indicator."
  #     responses:
  #       "200": 
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/DeviceCountRespV1"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"

  # /iocs/entities/indicators/v1:
  #   get:
  #     security:
  #       - OAuth2: [ioc:read] 
  #     operationId: IndicatorGetV1
  #     summary: "Get Indicators by ids."
  #     parameters:
  #       - in: query
  #         name: ids
  #         schema:
  #           type: string 
  #         required: true
  #         description: "The ids of the Indicators to retrieve."
  #     responses:
  #       "200": 
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/IndicatorRespV1"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"

  # /iocs/queries/indicators/v1:
  #   get:
  #     security:
  #       - OAuth2: [ioc:read] 
  #     operationId: IndicatorSearchV1
  #     summary: "Get Indicators aggregates as specified via json in the request body."
  #     parameters:
  #       - in: query
  #         name: filter
  #         schema:
  #           type: string 
  #         description: "FQL Syntax formatted filter that should be used to limit the results."
  #       - in: query
  #         name: offset
  #         schema:
  #           type: integer
  #         description: "The offset to start retrieving records from."        
  #       - in: query
  #         name: limit
  #         schema:
  #           type: integer
  #         description: "Maximum number of results to return."
  #       - in: query
  #         name: sort
  #         schema:
  #           type: string
  #           enum:
  #             - "action"
  #             - "applied_globally"
  #             - "metadata.av_hits"
  #             - "metadata.company_name.raw"
  #             - "created_by"
  #             - "created_on"
  #             - "expiration"
  #             - "expired"
  #             - "metadata.filename.raw"
  #             - "modified_by"
  #             - "modified_on"
  #             - "metadata.original_filename.raw"
  #             - "metadata.product_name.raw"
  #             - "metadata.product_version"
  #             - "severity_number"
  #             - "source"
  #             - "type"
  #             - "value"
  #         description: "The sort expression that should be used to sort the results."
  #       - in: query
  #         name: after
  #         schema:
  #           type: string 
  #         description: "A pagination token used with the limit parameter to manage pagination of results."
  #       - in: query
  #         name: from_parent
  #         schema:
  #           type: boolean
  #         description: "The filter for returning either only indicators for the request customer or its MSSP parents"
  #     responses:
  #       "200": 
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/IndicatorQueryRespV1"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"

  # /incidents/combined/crowdscores/v1:
  #   get:
  #     security:
  #       - OAuth2: [incidents:read] 
  #     operationId: CrowdScore
  #     summary: "Query environment wide CrowdScore and return the entity data"
  #     parameters:
  #       - in: query
  #         name: filter
  #         schema:
  #           type: string
  #         description: "Optional filter FQL Syntax formatted string used to limit the results."
  #       - in: query
  #         name: limit
  #         schema:
  #           minimum: 1
  #           maximum: 2500
  #           type: integer
  #         description: "Maximum number of records to return. (Max: 2500)"
  #       - in: query
  #         name: offset
  #         schema:
  #           type: integer
  #         description: "Starting index of overall result set from which to return ids."
  #       - in: query
  #         name: sort
  #         schema:
  #           enum:
  #             - "adjusted_score.asc"
  #             - "adjusted_score.desc"
  #             - "score.asc"
  #             - "score.desc"
  #             - "timestamp.asc"
  #             - "timestamp.desc"
  #           type: string 
  #         description: "The property to sort by. (Ex: modified_timestamp.desc) followed by the sort direction, either asc or desc"
  #     responses:
  #       "200": 
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/EnvironmentScoreResponse"
  #       "400":
  #         description: "Bad Request"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "500":
  #         description: "Internal Server Error"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"

  # /incidents/entities/behaviors/GET/v1:
  #   post:
  #     security:
  #       - OAuth2: [incidents:read] 
  #     operationId: GetBehaviors
  #     summary: "Get details on behaviors by providing behavior IDs"
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/IdsRequest"
  #     responses:
  #       "200": 
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/MsaExternalBehaviorResponse"
  #       "400":
  #         description: "Bad Request"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "500":
  #         description: "Internal Server Error"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  
  # /incidents/entities/incidents/GET/v1:
  #   post:
  #     security:
  #       - OAuth2: [incidents:read] 
  #     operationId: GetIncidents
  #     summary: "Get details on incidents by providing behavior IDs"
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/IdsRequest"
  #     responses:
  #       "200": 
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/MsaExternalIncidentResponse"
  #       "400":
  #         description: "Bad Request"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "500":
  #         description: "Internal Server Error"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"

  # /incidents/queries/behaviors/v1:
  #   get:
  #     security:
  #       - OAuth2: [incidents:read] 
  #     operationId: QueryBehaviors
  #     summary: "Search for behaviors by providing a FQL filter, sorting, and paging details"
  #     parameters:
  #       - in: query
  #         name: filter
  #         schema:
  #           type: string
  #         description: "Optional filter and sort criteria FQL Syntax formatted string used to limit the results."
  #       - in: query
  #         name: offset
  #         schema:
  #           type: integer
  #         description: "Starting index of overall result set from which to return ids."
  #       - in: query
  #         name: limit
  #         schema:
  #           maximum: 500
  #           minimum: 1
  #           type: integer
  #         description: "The maximum records to return. [1-500]"
  #       - in: query
  #         name: sort
  #         schema:
  #           enum:
  #             - "alert_ids.asc"
  #             - "alert_ids.desc"
  #             - "cmdline.asc"
  #             - "cmdline.desc"
  #             - "detection_ids.asc"
  #             - "detection_ids.desc"
  #             - "display_name.asc"
  #             - "display_name.desc"
  #             - "domain.asc"
  #             - "domain.desc"
  #             - "filepath.asc"
  #             - "filepath.desc"
  #             - "timestamp.asc"
  #             - "timestamp.desc"
  #           type: string 
  #         description: "The property to sort by. (Ex: modified_timestamp.desc)"
  #     responses:
  #       "200": 
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/QueryResponse"
  #       "400":
  #         description: "Bad Request"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "500":
  #         description: "Internal Server Error"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"

  # /incidents/queries/incidents/v1:
  #   get:
  #     security:
  #       - OAuth2: [incidents:read] 
  #     operationId: QueryIncidents
  #     summary: "Search for incidents by providing a FQL filter, sorting, and paging details"
  #     parameters:
  #       - in: query
  #         name: filter
  #         schema:
  #           type: string
  #         description: "FQL Syntax formatted string used to limit the results."
  #       - in: query
  #         name: limit
  #         schema:
  #           type: integer
  #           maximum: 500
  #           minimum: 1
  #         description: "The maximum records to return. [1-500]"
  #       - in: query
  #         name: offset
  #         schema:
  #           type: integer
  #         description: "Starting index of overall result set from which to return ids."
  #       - in: query
  #         name: sort
  #         schema:
  #           type: string
  #           enum:
  #             - "assigned_to.asc"
  #             - "assigned_to.desc"
  #             - "assigned_to_name.asc"
  #             - "assigned_to_name.desc"
  #             - "end.asc"
  #             - "end.desc"
  #             - "modified_timestamp.asc"
  #             - "modified_timestamp.desc"
  #             - "name.asc"
  #             - "name.desc"
  #             - "sort_score.asc"
  #             - "sort_score.desc"
  #             - "start.asc"
  #             - "start.desc"
  #             - "state.asc"
  #             - "state.desc"
  #             - "status.asc"
  #             - "status.desc"
  #         description: "The property to sort by. (Ex: modified_timestamp.desc)"
  #     responses:
  #       "200": 
  #         description: "OK"
  #         content: 
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/MsaIncidentQueryResponse"
  #       "400":
  #         description: "Bad Request"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "403":
  #         description: "Forbidden"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "429":
  #         description: "Too Many Requests"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"
  #       "500":
  #         description: "Internal Server Error"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ReplyMetaOnly"













components:
  # securitySchemes:
  #   OAuth2:
  #     type: oauth2
  #     flows:
  #       clientCredentials:
  #         tokenUrl: https://api.us-2.crowdstrike.com/oauth2/token
  #         scopes:
  #           "apps:read": "Grants read access on apps resources"
  #           "apps:write": "Grants write access on apps resources"
  #           "aspm-admin:read": "Grants read access on aspm-admin resources"
  #           "aspm-admin:write": "Grants write access on aspm-admin resources"
  #           "aspm-falcon-admin:write": "Grants write access on aspm-falcon-admin resources"
  #           "aspm-user:read": "Grants read access on aspm-user resources"
  #           "aspm-user:write": "Grants write access on aspm-user resources"
  #           "aspm-viewer:read": "Grants read access on aspm-viewer resources"
  #           "cspm-registration:read": "Grants read access on cspm-registration resources"
  #           "cspm-remediation:write": "Grants write access on cspm-remediation resources"
  #           "cspm-sensormgmt:write": "Grants write access on cspm-sensormgmt resources"
  #           "custom-storage:read": "Grants read access on custom-storage resources"
  #           "custom-storage:write": "Grants write access on custom-storage resources"
  #           "devices:read": "Grants read access on devices resources"
  #           "devices:write": "Grants write access on devices resources"
  #           "falcon-container-cli:write": "Grants write access on falcon-container-cli resources"
  #           "fim:read": "Grants read access on fim resources"
  #           "iac:read": "Grants read access on iac resources"
  #           "iac:write": "Grants write access on iac resources"
  #           "identity-automation:read": "Grants read access on identity-automation resources"
  #           "identity-automation:write": "Grants write access on identity-automation resources"
  #           "identity-detections:read": "Grants read access on identity-detections resources"
  #           "identity-enforcement:read": "Grants read access on identity-enforcement resources"
  #           "identity-enforcement:write": "Grants write access on identity-enforcement resources"
  #           "identity-health:read": "Grants read access on identity-health resources"
  #           "identity-mfa-tool:write": "Grants write access on identity-mfa-tool resources"
  #           "kubernetes-protection-agent:write": "Grants write access on kubernetes-protection-agent resources"
  #           "mssp:read": "Grants read access on mssp resources"
  #           "provisioning:read": "Grants read access on provisioning resources"
  #           "provisioning:write": "Grants write access on provisioning resources"
  #           "real-time-response-app:write": "Grants write access on real-time-response-app resources"
  #           "recon-monitoring-rules:read": "Grants read access on recon-monitoring-rules resources"
  #           "recon-monitoring-rules:write": "Grants write access on recon-monitoring-rules resources"
  #           "sensor-installers:read": "Grants read access on sensor-installers resources"
  #           "snapshot:write": "Grants write access on snapshot resources"
  #           "usage-api:read": "Grants read access on usage-api resources"
  #           "usermgmt:read": "Grants read access on usermgmt resources"
  #           "usermgmt:write": "Grants write access on usermgmt resources"
  #           "zero-trust-assessment:read": "Grants read access on zero-trust-assessment resources"
  schemas:
    ReplyMetaOnly:
      type: object
      required:
        - meta
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/APIError"
        meta:
            $ref: "#/components/schemas/MetaInfo"

    MetaInfo:
      type: object
      required:
        - query_time
        - trace_id
      properties:
        pagination:
          $ref: "#/components/schemas/Paging"
        powered_by:
          type: string
        query_time:
          type: number
          format: double
        trace_id:
          type: string
        writes:
          $ref: "#/components/schemas/Resources"

    APIError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        id:
          type: string
        message:
          type: string

    Paging:
      type: object
      required:
        - limit
        - offset
        - total
      properties:
        limit:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        total:
          type: integer
          format: int32

    Resources:
      type: object
      required:
        - resources_affected
      properties:
        resources_affected:
          type: integer
          format: int32

    AlertQueryResponse:
      type: object
      required:
        - meta
        - resources
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/APIError"
        meta:
          $ref: "#/components/schemas/MetaInfo"
        resources:
          description: "Array of the Alerts requested"
          type: array
          items:
            type: string
            description: "Alert ID"
            example: "ddae18657d0a426db6afacce64c540a6:ngsiem:ddae18657d0a426db6afacce64c540a6:dd40545edb0e427aa50887c34e4178a1"
